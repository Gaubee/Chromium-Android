// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action_value.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

public interface AutofillValueRegexpOrBuilder extends
    // @@protoc_insertion_point(interface_extends:autofill_assistant.AutofillValueRegexp)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * The profile to be used. This has to be requested with a
   * |CollectUserDataAction| first.
   * </pre>
   *
   * <code>optional .autofill_assistant.AutofillValueRegexp.Profile profile = 1;</code>
   * @return Whether the profile field is set.
   */
  boolean hasProfile();
  /**
   * <pre>
   * The profile to be used. This has to be requested with a
   * |CollectUserDataAction| first.
   * </pre>
   *
   * <code>optional .autofill_assistant.AutofillValueRegexp.Profile profile = 1;</code>
   * @return The profile.
   */
  org.chromium.chrome.browser.autofill_assistant.proto.AutofillValueRegexp.Profile getProfile();

  /**
   * <pre>
   * A string containing any number of "${key}" placeholders, where the key is
   * an integer corresponding to entries from field_types.h or
   * |AutofillFormatProto::AutofillAssistantCustomField|.
   * Note that the set of actually available fields are outside of our
   * control and are retrieved automatically from the provided profile.
   * The |value_expression| needs to escape all text outside of placeholders,
   * e.g. a pattern like "+${12}" needs to escape the "+". The pattern keys
   * ("${12}") should not be escaped, this will be handled during replacement.
   * </pre>
   *
   * <code>optional .autofill_assistant.TextFilter value_expression = 2;</code>
   * @return Whether the valueExpression field is set.
   */
  boolean hasValueExpression();
  /**
   * <pre>
   * A string containing any number of "${key}" placeholders, where the key is
   * an integer corresponding to entries from field_types.h or
   * |AutofillFormatProto::AutofillAssistantCustomField|.
   * Note that the set of actually available fields are outside of our
   * control and are retrieved automatically from the provided profile.
   * The |value_expression| needs to escape all text outside of placeholders,
   * e.g. a pattern like "+${12}" needs to escape the "+". The pattern keys
   * ("${12}") should not be escaped, this will be handled during replacement.
   * </pre>
   *
   * <code>optional .autofill_assistant.TextFilter value_expression = 2;</code>
   * @return The valueExpression.
   */
  org.chromium.chrome.browser.autofill_assistant.proto.TextFilter getValueExpression();
}
